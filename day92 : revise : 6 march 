Question 

You are tracking the daily temperatures in your city and want to know how long you'll have to wait for a warmer day.

Given an array temperatures, where each element represents the temperature recorded on that day, determine how many days you must wait for a hotter temperature.

For each day i, print the number of days until a warmer day appears. If no such day exists, print 0.

Input Format

The first line contains T, the number of test cases.
For each test case:
The first line contains an integer n, the number of days recorded.
The second line contains n space-separated integers representing the temperatures.
Constraints

1 <= T <= 1000
1 <= temperatures.length <= 10^5
30 <= temperatures[i] <= 100
Output Format

For each test case, print an array where each element represents the number of days to wait for a hotter day. If no hotter day exists, print 0 for that day.

Sample Input 0

1
8
73 74 75 71 69 72 76 73
Sample Output 0

1 1 4 2 1 1 0 0
Explanation 0

Day 0 (73°F) → Wait 1 day for 74°F
Day 1 (74°F) → Wait 1 day for 75°F
Day 2 (75°F) → Wait 4 days for 76°F
Day 3 (71°F) → Wait 2 days for 72°F
Day 4 (69°F) → Wait 1 day for 72°F
Day 5 (72°F) → Wait 1 day for 76°F
Day 6 (76°F) → No hotter day ahead → 0
Day 7 (73°F) → No hotter day ahead → 0
Sample Input 1

1
4
30 40 50 60
Sample Output 1

1 1 1 0
Explanation 1

Day 0 (30°F) → Wait 1 day for 40°F
Day 1 (40°F) → Wait 1 day for 50°F
Day 2 (50°F) → Wait 1 day for 60°F
Day 3 (60°F) → No hotter day ahead → 0
Sample Input 2

1
3
30 60 90
Sample Output 2

1 1 0
Explanation 2

Day 0 (30°F) → Wait 1 day for 60°F
Day 1 (60°F) → Wait 1 day for 90°F
Day 2 (90°F) → No hotter day ahead → 0


code :


#include <iostream>
#include <vector>
#include <stack>

using namespace std;

vector<int> dailyTemperatures(const vector<int>& temperatures) {
    int n = temperatures.size();
    vector<int> result(n, 0); // Initialize result array with 0s
    stack<int> s; // Stack to store indices of temperatures

    for (int i = 0; i < n; ++i) {
        // While there is a temperature in the stack and the current temperature is greater
        while (!s.empty() && temperatures[i] > temperatures[s.top()]) {
            int idx = s.top();
            s.pop();
            result[idx] = i - idx; // Calculate the number of days to wait
        }
        s.push(i); // Push the current index onto the stack
    }

    return result;
}

int main() {
    int T;
    cin >> T; // Number of test cases
    while (T--) {
        int n;
        cin >> n; // Number of days recorded
        vector<int> temperatures(n);
        for (int i = 0; i < n; ++i) {
            cin >> temperatures[i]; // Read temperatures
        }

        vector<int> result = dailyTemperatures(temperatures);
        for (int days : result) {
            cout << days << " "; // Print the result for each test case
        }
        cout << endl; // New line for the next test case
    }

    return 0;
}